<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="vehicle_id" default="default"/>
  <let name="sensor_model" value="aip_x2_erga"/>

  <let
    name="camera_calibration_service_names"
    value="[/base_link]"
  />

  <let
    name="lidar_calibration_service_names"
    value="[
    /base_link/pandar_40p_left_base_link,
    /base_link/pandar_qt_left_base_link,
    /base_link/pandar_40p_right_base_link,
    /base_link/pandar_qt_right_base_link,
    /base_link/pandar_40p_front_base_link,
    /base_link/pandar_qt_front_base_link,
    /base_link/pandar_40p_rear_base_link,
    /base_link/pandar_qt_rear_base_link]"
  />

  <let
    name="camera_calibration_sensor_kit_frames"
    value="[
    base_link]"
  />

  <let
    name="lidar_calibration_sensor_kit_frames"
    value="[
    base_link,
    base_link,
    base_link,
    base_link,
    base_link,
    base_link,
    base_link,
    base_link]"
  />

  <let
    name="calibration_camera_frames"
    value="[
    camera/camera_font_wide_base_link]"
  />

  <let
    name="calibration_camera_optical_link_frames"
    value="[
    camera/front_wide]"
  />

  <let
    name="calibration_lidar_base_frames"
    value="[
    lidar/left_pandar_40p_base_link,
    lidar/left_pandar_qt_base_link,
    lidar/right_pandar_40p_base_link,
    lidar/right_pandar_qt_base_link,
    lidar/front_pandar_64_base_link,
    lidar/front_pandar_qt_base_link,
    lidar/rear_pandar_40p_base_link,
    lidar/rear_pandar_qt_base_link]"
  />

  <let name="calibration_lidar_frames" value="[
    lidar/left_pandar_40p,
    lidar/left_pandar_qt,
    lidar/right_pandar_40p,
    lidar/right_pandar_qt,
    lidar/front_pandar_64,
    lidar/front_pandar_qt,
    lidar/rear_pandar_40p,
    lidar/rear_pandar_qt]"/>

  <let name="mapping_lidar_frame" value="lidar/rear_pandar_40p"/>
  <let name="mapping_pointcloud" value="/sensing/lidar/left_upper/outlier_filtered/pointcloud"/>
  <!--let name="predicted_objects" value="/perception/object_recognition/objects" /-->
  <let name="detected_objects" value="/perception/object_recognition/detection/objects"/>

  <let
    name="calibration_camera_info_topics"
    value="[
    /sensing/camera/camera_info]"
  />

  <let
    name="calibration_image_topics"
    value="[
    /sensing/camera/camera0/image_rect_color/compressed]"
  />

  <let
    name="calibration_pointcloud_topics"
    value="[
    /sensing/lidar/left_pandar_qt/outlier_filtered/pointcloud,
    /sensing/lidar/left_pandar_40p/outlier_filtered/pointcloud,
    /sensing/lidar/right_pandar_qt/outlier_filtered/pointcloud,
    /sensing/lidar/right_pandar_40p/outlier_filtered/pointcloud,
    /sensing/lidar/front_pandar_qt/outlier_filtered/pointcloud,
    /sensing/lidar/front_pandar_64/outlier_filtered/pointcloud,
    /sensing/lidar/rear_pandar_qt/outlier_filtered/pointcloud,
    /sensing/lidar/rear_pandar_40p/outlier_filtered/pointcloud]"
  />

  <arg name="rviz"/>
  <let name="rviz_profile" value="$(find-pkg-share extrinsic_mapping_based_calibrator)/rviz/x2.rviz"/>

  <arg name="src_yaml" default="$(find-pkg-share individual_params)/config/$(var vehicle_id)/$(var sensor_model)/calibration.yaml"/>
  <arg name="dst_yaml" default="$(env HOME)/calibration.yaml"/>

  <group>
    <push-ros-namespace namespace="top_unit"/>

    <!-- extrinsic_calibration_client -->
    <node pkg="extrinsic_calibration_client" exec="extrinsic_calibration_client" name="extrinsic_calibration_client" output="screen">
      <param name="src_path" value="$(var src_yaml)"/>
      <param name="dst_path" value="$(var dst_yaml)"/>
    </node>

    <!-- extrinsic_calibration_manager -->
    <node pkg="extrinsic_calibration_manager" exec="extrinsic_calibration_manager" name="extrinsic_calibration_manager" output="screen">
      <param name="parent_frame" value="base_link"/>
      <param name="child_frames" value="[
        calibration_lidar_base_frames]"/>
    </node>
  </group>


  <!-- mapping based calibrator -->
  <include file="$(find-pkg-share extrinsic_mapping_based_calibrator)/launch/calibrator.launch.xml">
    <arg name="ns" value=""/>

    <arg name="camera_calibration_service_names" value="$(var camera_calibration_service_names)"/>
    <arg name="lidar_calibration_service_names" value="$(var lidar_calibration_service_names)"/>
    <arg name="camera_calibration_sensor_kit_frames" value="$(var camera_calibration_sensor_kit_frames)"/>
    <arg name="lidar_calibration_sensor_kit_frames" value="$(var lidar_calibration_sensor_kit_frames)"/>
    <arg name="calibration_camera_frames" value="$(var calibration_camera_frames)"/>
    <arg name="calibration_camera_optical_link_frames" value="$(var calibration_camera_optical_link_frames)"/>
    <arg name="calibration_lidar_base_frames" value="$(var calibration_lidar_base_frames)"/>
    <arg name="calibration_lidar_frames" value="$(var calibration_lidar_frames)"/>
    <arg name="mapping_lidar_frame" value="$(var mapping_lidar_frame)"/>

    <arg name="mapping_pointcloud" value="$(var mapping_pointcloud)"/>
    <arg name="detected_objects" value="$(var detected_objects)"/>

    <arg name="calibration_camera_info_topics" value="$(var calibration_camera_info_topics)"/>
    <arg name="calibration_image_topics" value="$(var calibration_image_topics)"/>
    <arg name="calibration_pointcloud_topics" value="$(var calibration_pointcloud_topics)"/>

    <arg name="local_map_num_keyframes" value="30"/>
    <arg name="dense_pointcloud_num_keyframes" value="20"/>
    <arg name="mapper_resolution" value="0.5"/>
    <arg name="mapper_max_iterations" value="500"/>
    <arg name="mapper_epsilon" value="0.001"/>
    <arg name="mapper_max_correspondence_distance" value="0.1"/>
    <arg name="lidar_calibration_max_frames" value="20"/>
    <arg name="calibration_eval_max_corr_distance" value="0.2"/>
    <arg name="solver_iterations" value="100"/>
    <arg name="calibration_skip_keyframes" value="10"/>

    <arg name="mapping_max_range" value="50.0"/>
    <arg name="max_calibration_range" value="40.0"/>

    <arg name="calibration_use_only_last_frames" value="true"/>
    <arg name="crop_z_calibration_pointclouds" value="true"/>
    <arg name="crop_z_calibration_pointclouds_value" value="4.0"/>
  </include>

  <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(var rviz_profile)" if="$(var rviz)"/>
</launch>
